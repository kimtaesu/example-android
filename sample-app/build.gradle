apply plugin: 'com.android.application'

apply plugin: 'jacoco'

task jacocoTestReport(type: JacocoReport, dependsOn: ['testFreeDebugUnitTest']) {

  reports {
    xml.enabled = true
    html.enabled = true
  }

  def fileFilter = ['**/R.class', '**/R$*.class', '**/BuildConfig.*', '**/Manifest*.*', '**/*Test*.*', 'android/**/*.*']
  def debugTree = fileTree(dir: "$project.buildDir/intermediates/classes/debug", excludes: fileFilter)
  def mainSrc = "$project.projectDir/src/main/java"

  sourceDirectories = files([mainSrc])
  classDirectories = files([debugTree])
  executionData = fileTree(dir: project.buildDir, includes: [
      'jacoco/*.exec'
  ])
}

android {
  compileSdkVersion configCompileSdkVersion
  buildToolsVersion configBuildToolsVersion

  defaultConfig {
    minSdkVersion 15
    targetSdkVersion configTargetSdkVersion
    versionCode 1
    versionName project.version
    testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
  }

  productFlavors {
    free {
      applicationId 'com.dicedmelon.example.android.free'
    }
    paid {
      applicationId 'com.dicedmelon.example.android'
    }
  }

  buildTypes {
    debug {
      applicationIdSuffix '.debug'
      versionNameSuffix '-debug'
      testCoverageEnabled true
    }
  }

  dataBinding {
    enabled = true
  }
}

dependencies {
  compile support.appCompat

  testCompile assertJCore
  testCompile junit

  androidTestCompile supportTest.espressoCore
  androidTestCompile supportTest.rules
}
